{"version":3,"sources":["services/observations.js","services/login.js","components/Notification.js","components/Footer.js","components/loginForm.js","components/ObservationForm.js","components/Togglable.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","process","token","getAll","order","request","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","remove","delete","login","credentials","console","log","logout","register","name","username","password","Notification","message","className","Footer","style","color","fontStyle","fontSize","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","onSubmit","value","onChange","type","ObservationForm","handleNewRarityChange","handleNewNameChange","handleNewScientificNameChange","newName","newRarity","newScientificName","handleNewNoteChange","newNote","Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","buttonLabel","children","Observation","state","noteOpen","observation","this","key","scientificName","moment","datetime","format","rarity","split","join","note","setState","substring","Component","App","observations","setObservations","setNewName","setNewRarity","setNewScientificName","setNewNote","setUsername","setPassword","user","setUser","errorMessage","setErrorMessage","loginVisible","setLoginVisible","filterObservations","setFilterObservations","filterObservationsByRarity","setFilterObservationsByRarity","useEffect","observationService","initialObservations","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","observationFormRef","createRef","observationFormProps","current","observationObject","returnedObject","concat","catch","target","loginForm","filter","toLowerCase","includes","filterObservation","filterObservationByRarity","map","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.112f29c2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = process.env.REACT_APP_API_URL || '/api'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = (order='-1') => {\n  const request = axios.get(baseUrl + '/observations?order=' + order)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl + '/observations', newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/observations/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/observations/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken, remove }","import axios from 'axios'\nconst baseUrl = process.env.REACT_APP_API_URL || '/api'\n\nconst login = async credentials => {\n  console.log('logging in...', credentials)\n  const response = await axios.post(baseUrl + '/login', credentials)\n  return response.data\n}\n\nconst logout = async () => {\n  console.log('logging out...')\n  const response = await axios.post(baseUrl + '/logout')\n  return response.data\n}\n\nconst register = async (name, username, password)  => {\n  console.log('creating user...')\n  const response = await axios.post(baseUrl + '/register')\n  return response.data\n}\n\nexport default { login, logout, register }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","  \nimport React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Birdie, Elisa Nurmi 2019</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst LoginForm = ({\n   handleSubmit,\n   handleUsernameChange,\n   handlePasswordChange,\n   username,\n   password\n  }) => {\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          Username <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          Password <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n      </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst ObservationForm = ({ \n  onSubmit, \n  handleNewRarityChange, \n  handleNewNameChange, \n  handleNewScientificNameChange, \n  newName, \n  newRarity, \n  newScientificName,\n  handleNewNoteChange,\n  newNote \n}) => {\n  \n    return (\n    <div>\n      <h2 className=\"create-observation-title\">Create a new observation</h2>\n      <form onSubmit={onSubmit}>\n      <label>Name*</label>\n      <input\n          value={newName}\n          onChange={handleNewNameChange}/>\n\n      <br />\n      <label>Scientific name</label>\n      <input\n          value={newScientificName}\n          onChange={handleNewScientificNameChange}\n        />\n\n      <br />\n      <label>Rarity</label>\n      <select value={newRarity} onChange={handleNewRarityChange}>\n        <option value=\"common\">Common</option>\n        <option value=\"rare\">Rare</option>\n        <option value=\"extremely rare\">Extremely rare</option>\n      </select>\n     <br />\n      <label>Notes<br/>\n      <textarea\n          value={newNote}\n          onChange={handleNewNoteChange}\n        />\n    </label>\n    <br/>\n    <button type=\"submit\">Save</button>\n    </form>\n\n    </div>\n  )\n}\n\nexport default ObservationForm","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nexport default Togglable","import React, { useState, useEffect, Component } from 'react';\n// import logo from './vladimir-kudinov-orng-mDXPnk-unsplash.jpg';\nimport './App.css';\nimport observationService from './services/observations';\nimport moment from 'moment'\nimport loginService from './services/login'\n// import { nextTick } from 'q';\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport LoginForm from './components/loginForm'\nimport ObservationForm from './components/ObservationForm';\nimport Togglable from './components/Togglable'\n\nclass Observation extends Component {\n  state = {\n    noteOpen: false\n  }\n  \n  render() {\n    const { observation } = this.props\n    const { noteOpen } = this.state\n\n    return(\n    <div key={observation.id} className=\"observation-row\">\n      <span className=\"observation-name\">{observation.name}</span> <span className=\"observation-scientificname\">({observation.scientificName})</span> <span className=\"observation-time\">{moment(observation.datetime).format('HH:MM:SS DD.MM.YYYY')}</span>\n      <span className={`observation-rarity observation-rarity--${observation.rarity.split(' ').join('-')}`}>{observation.rarity}</span>\n      <div className=\"observation-note\">{noteOpen ? (\n        <>\n        { observation.note} <button onClick={() => this.setState({noteOpen:false})}>Show less</button>\n        </>\n      ) : (\n        <>\n          {observation.note.substring(0, 120)}... <button onClick={() => this.setState({noteOpen:true})}>Show more</button>\n        </>\n        )\n      }</div>\n      {/*<button onClick={ e => e.preventDefault() & observationService.remove(observation.id) }>Delete</button>*/}\n    </div>\n    )\n  }\n}\n\nfunction App() {\n\n  const [observations, setObservations] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newRarity, setNewRarity] = useState('common')\n  const [newScientificName, setNewScientificName] = useState('')\n  const [newNote, setNewNote] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n  const [filterObservations, setFilterObservations] = useState('')\n  const [filterObservationsByRarity, setFilterObservationsByRarity] = useState('')\n\n\n  // fetch all observations from API\n  useEffect(() => {\n    observationService\n      .getAll()\n      .then(initialObservations => {\n        setObservations(initialObservations)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBirdieUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      observationService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBirdieUser', JSON.stringify(user))\n\n      observationService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addObservation = event => {\n    event.preventDefault()\n    observationFormRef.current.toggleVisibility()\n    const observationObject = {\n      name: newName,\n      scientificName: newScientificName,\n      note: newNote,\n      rarity: newRarity\n    }\n\n    observationService\n      .create(observationObject)\n      .then(returnedObject => {\n        setObservations([returnedObject].concat(observations))\n        setNewName('')\n        setNewScientificName('')\n        setNewRarity('common')\n        setNewNote('')\n      })\n      .catch(returnedObject => {\n        setErrorMessage('Error')\n      })\n  }\n\n  const filterObservation = (observation) => {\n    return observation.name.toLowerCase().includes(filterObservations.toLowerCase())\n    || observation.scientificName.toLowerCase().includes(filterObservations.toLowerCase())\n    || observation.note.toLowerCase().includes(filterObservations.toLowerCase())\n  }\n\n  const filterObservationByRarity = (observation) => {\n    if(filterObservationsByRarity === '')\n      return true\n\n    return observation.rarity === filterObservationsByRarity\n  }\n\n\n  const observationRows = () => observations\n  .filter(observation => filterObservation(observation))\n  .filter(observation => filterObservationByRarity(observation))\n  .map(observation =>\n    <Observation\n      key={observation.id}\n      observation={observation}\n    />\n  )\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewScientificNameChange = (event) => {\n    setNewScientificName(event.target.value)\n  }\n\n  const handleNewNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleNewRarityChange = (event) => {\n    setNewRarity(event.target.value)\n  }\n  const handleFilterObservationsChange = (event) => {\n    setFilterObservations(event.target.value)\n  }\n  const handleFilterObservationsByRarityChange = (event) => {\n    setFilterObservationsByRarity(event.target.value)\n  }\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>Login</button>\n        </div>\n        <div style={showWhenVisible}  className=\"login-form\">\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>Cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const observationFormRef = React.createRef()\n  let observationFormProps = {\n    onSubmit: addObservation,\n    newName,\n    handleNewNameChange,\n    newRarity,\n    handleNewRarityChange,\n    newScientificName,\n    handleNewScientificNameChange,\n    newNote,\n    handleNewNoteChange\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"header\">\n      <h1 className=\"title\">Birdie</h1>\n      <div className=\"login\">\n          {user === null ?\n          loginForm() :\n            <div>\n              {user.name}\n            </div>\n          }\n        </div>\n    </div>\n\n    <div className=\"top-menu\">\n    <div className=\"create-observations\">\n    {user === null ? (`Please login to add observations`) : (\n    <Togglable buttonLabel=\"New observation\" ref={observationFormRef} >\n            <ObservationForm {...observationFormProps} />\n          </Togglable >\n    )}\n    </div>\n\n    <div className=\"error-message\">\n      <Notification message={errorMessage} />\n    </div>\n    </div>\n\n    <div className=\"search\">\n      <label>Search</label>\n      <input\n          value={filterObservations}\n          onChange={handleFilterObservationsChange}\n        />\n\n      <br/>\n      <label>Rarity</label>\n      <select\n          value={filterObservationsByRarity}\n          onChange={handleFilterObservationsByRarityChange}>\n          <option value=\"\">All</option>\n          <option value=\"common\">Common</option>\n          <option value=\"rare\">Rare</option>\n          <option value=\"extremely rare\">Extremely rare</option>\n        </select>\n      </div>\n\n      <div className=\"observations-rows\">{observationRows()}</div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nif(process.env.NODE_ENV==='development')\n  console.log('In development mode')\n\nif(process.env.NODE_ENV==='test')\n  console.log('In test mode')\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}